name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    strategy:
      matrix:
        otp: [20.3, 21.3, 22.2, 23]
        elixir: [1.9.4, 1.10.4, 1.11.2, 1.12.1]
        exclude:
          - otp: 23
            elixir: 1.9.4
          - otp: 20.3
            elixir: 1.10.4
          - otp: 20.3
            elixir: 1.11.2
          - otp: 20.3
            elixir: 1.12.1
          - otp: 21.3
            elixir: 1.12.1
    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ matrix.otp }}-${{ runner.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ matrix.otp }}-${{ runner.elixir }}-mix-

      - name: Install Dependencies
        run: mix deps.get --only test

      - name: Check formatting
        run: mix format --check-formatted

      - name: Compile library
        run: mix compile --warnings-as-errors

      - run: mix credo --strict

      - name: Retrieve PLT cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --no-check

      - run: mix test --warnings-as-errors
        if: matrix.elixir == '1.12.1'

      - run: mix test
        if: matrix.elixir != '1.12.1'
